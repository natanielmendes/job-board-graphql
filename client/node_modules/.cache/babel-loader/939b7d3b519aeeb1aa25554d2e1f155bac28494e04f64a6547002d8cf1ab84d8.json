{"ast":null,"code":"// NOTE: this example keeps the access token in LocalStorage just because it's\n// simpler, but in a real application you may want to use cookies instead for\n// better security\n\nconst ACCESS_TOKEN_KEY = 'accessToken';\nconst API_URL = 'http://localhost:9000';\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\n}\nexport async function login(email, password) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    const {\n      token\n    } = await response.json();\n    localStorage.setItem(ACCESS_TOKEN_KEY, token);\n  }\n  return response.ok;\n}\nexport function isLoggedIn() {\n  return Boolean(localStorage.getItem(ACCESS_TOKEN_KEY));\n}\nexport function logout() {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n}","map":{"version":3,"names":["ACCESS_TOKEN_KEY","API_URL","getAccessToken","localStorage","getItem","login","email","password","response","fetch","method","headers","body","JSON","stringify","ok","token","json","setItem","isLoggedIn","Boolean","logout","removeItem"],"sources":["/home/nataniel/Projects/udemy/job-board-graphql/client/src/auth.js"],"sourcesContent":["// NOTE: this example keeps the access token in LocalStorage just because it's\n// simpler, but in a real application you may want to use cookies instead for\n// better security\n\nconst ACCESS_TOKEN_KEY = 'accessToken';\nconst API_URL = 'http://localhost:9000';\n\nexport function getAccessToken() {\n  return localStorage.getItem(ACCESS_TOKEN_KEY);\n}\n\nexport async function login(email, password) {\n  const response = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ email, password }),\n  });\n  if (response.ok) {\n    const { token } = await response.json();\n    localStorage.setItem(ACCESS_TOKEN_KEY, token);\n  }\n  return response.ok;\n}\n\nexport function isLoggedIn() {\n  return Boolean(localStorage.getItem(ACCESS_TOKEN_KEY));\n}\n\nexport function logout() {\n  localStorage.removeItem(ACCESS_TOKEN_KEY);\n}\n"],"mappings":"AAAA;AACA;AACA;;AAEA,MAAMA,gBAAgB,GAAG,aAAa;AACtC,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,OAAO,SAASC,cAAc,GAAG;EAC/B,OAAOC,YAAY,CAACC,OAAO,CAACJ,gBAAgB,CAAC;AAC/C;AAEA,OAAO,eAAeK,KAAK,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC3C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAER,OAAQ,QAAO,EAAE;IAC/CS,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAS,CAAC;EAC1C,CAAC,CAAC;EACF,IAAIC,QAAQ,CAACO,EAAE,EAAE;IACf,MAAM;MAAEC;IAAM,CAAC,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;IACvCd,YAAY,CAACe,OAAO,CAAClB,gBAAgB,EAAEgB,KAAK,CAAC;EAC/C;EACA,OAAOR,QAAQ,CAACO,EAAE;AACpB;AAEA,OAAO,SAASI,UAAU,GAAG;EAC3B,OAAOC,OAAO,CAACjB,YAAY,CAACC,OAAO,CAACJ,gBAAgB,CAAC,CAAC;AACxD;AAEA,OAAO,SAASqB,MAAM,GAAG;EACvBlB,YAAY,CAACmB,UAAU,CAACtB,gBAAgB,CAAC;AAC3C"},"metadata":{},"sourceType":"module","externalDependencies":[]}